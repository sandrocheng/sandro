#include <iostream>

using namespace std;
//内联函数，必须在定义的时候使用关键字 inline修饰，不能在声明的时候使用inline
//内联函数：在编译阶段 将内联函数中的函数体替换函数调用处。避免函数调用时的开销

//内联函数vs宏函数：
//    宏函数和内联函数 都会在适当的位置进行展开 避免函数调用开销
//    宏函数的参数没有类型，不能保证参数的完整性
//    内联函数的参数有类型，能保证参数的完整性
//    宏函数在预处理阶段展开，内联函数在编译阶段展开
//    宏函数没有作用域的限制，不能作为命名空间、结构体、类的成员
//    内联函数有作用域的限制，能作为命名空间、结构体、类的成员

//内联函数注意事项
//    在内联函数定义的时候加inline修饰
//    类中的成员函数默认都是内联函数（不加inline 也是内联函数）
//    有时候就算加上inline也不一定是内联函数（内联函数条件）
//      不能存在任何形式的循环语句
//      不能存在过多的条件判断语句
//      函数体不能过于庞大
//      不能对函数取地址
//    有时候不加inline修饰，也可能是内联函数
//    内不内联由编译器决定
void InnerFunTest();
static int my_add(int x,int y);