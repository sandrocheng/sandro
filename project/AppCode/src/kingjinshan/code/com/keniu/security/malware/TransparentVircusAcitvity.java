package com.keniu.security.malware;

import android.app.Activity;
import android.app.NotificationManager;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.widget.Toast;
import com.keniu.security.main.bu;
import java.io.File;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class TransparentVircusAcitvity extends Activity
  implements com.keniu.security.monitor.b
{
  public static final int a = 1000;
  public static final int b = 1001;
  public static final String e = "file_path";
  public static final String f = "bool_clean_res";
  NotificationManager c;
  com.keniu.security.monitor.a d;
  public boolean g = false;
  private int h;
  private int i;
  private String j;
  private String k;
  private String l;
  private String m;
  private String n;
  private String o;
  private boolean p = false;
  private boolean q = bz.a().e();
  private boolean r;
  private boolean s = false;
  private boolean t = false;
  private q u;
  private int v;

  private void a()
  {
    Bundle localBundle = getIntent().getExtras();
    this.h = localBundle.getInt("notificationID");
    this.i = localBundle.getInt("watcherModel");
    this.k = localBundle.getString("filePath");
    this.l = localBundle.getString("packName");
    this.m = localBundle.getString("softName");
    this.n = localBundle.getString("malName");
    File localFile = new File(this.k);
    boolean bool;
    if (localFile.getPath().startsWith("/system/app/"))
    {
      bool = true;
      this.p = bool;
      this.c = ((NotificationManager)getSystemService("notification"));
      this.d = com.keniu.security.monitor.a.a();
      switch (this.i)
      {
      default:
        this.j = "unKnownWatcher";
      case 0:
      case 1:
      case 2:
      }
    }
    while (true)
    {
      this.r = new File(this.k).exists();
      this.u = new q(this);
      return;
      if (localFile.lastModified() < 86400000L + new File("/system/app/").lastModified())
      {
        bool = true;
        break;
      }
      bool = false;
      break;
      this.j = "download";
      continue;
      this.j = "install";
      continue;
      this.j = "open";
    }
  }

  private void a(CharSequence paramCharSequence)
  {
    com.keniu.security.commui.b localb = new com.keniu.security.commui.b(this);
    localb.a(getString(2131427865), getString(2131429168, new Object[] { paramCharSequence }), getString(2131429166), getString(2131429167));
    localb.a(new cc(this, localb), new cd(this, localb));
    localb.d();
  }

  private static boolean a(File paramFile)
  {
    boolean bool;
    if (paramFile == null)
      bool = false;
    while (true)
    {
      return bool;
      if (paramFile.getPath().startsWith("/system/app/"))
        bool = true;
      else if (paramFile.lastModified() < 86400000L + new File("/system/app/").lastModified())
        bool = true;
      else
        bool = false;
    }
  }

  private static boolean a(String paramString)
  {
    return new File(paramString).exists();
  }

  private void b()
  {
    String str = this.k;
    if (Pattern.compile("/sdcard/").matcher(str).find());
    while (true)
    {
      try
      {
        File localFile = new File(this.k);
        if (localFile.exists())
        {
          if (localFile.delete())
          {
            this.g = true;
            Toast.makeText(this, 2131428544, 0).show();
            a(1, 2, 2, 1);
            this.c.cancel(this.h);
          }
        }
        else
        {
          finish();
          return;
        }
        Toast.makeText(this, 2131428547, 0).show();
        a(0, 2, 2, 1);
        continue;
      }
      catch (Exception localException)
      {
        continue;
      }
      bz.a();
      if (bz.b())
      {
        if (this.q)
        {
          this.g = true;
          this.s = true;
          bz.a().f();
          bz.a().b(this.k);
          bz.a().a(this.l);
          a(1, 1, 1, 0);
          this.c.cancel(this.h);
          Object[] arrayOfObject = new Object[1];
          arrayOfObject[0] = this.m;
          Toast.makeText(this, getString(2131428549, arrayOfObject), 0).show();
          finish();
        }
        else
        {
          bz.a().c();
          this.d.a(com.keniu.security.monitor.a.x, this, 1073741823);
          this.t = true;
        }
      }
      else
        startActivityForResult(new Intent("android.intent.action.DELETE", Uri.fromParts("package", this.l, null)), 1000);
    }
  }

  private static boolean b(String paramString)
  {
    return Pattern.compile("/sdcard/").matcher(paramString).find();
  }

  public final int a(int paramInt, Object paramObject1, Object paramObject2)
  {
    if (paramInt == com.keniu.security.monitor.a.x)
    {
      this.q = ((Boolean)paramObject1).booleanValue();
      runOnUiThread(new cb(this));
    }
    return 0;
  }

  public final void a(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    com.jxphone.mosecurity.a.a.a(this, Build.VERSION.RELEASE, this.o, this.n, this.l, this.p, "watcher", this.j, paramInt1, paramInt2, paramInt3, paramInt4);
  }

  protected void onActivityResult(int paramInt1, int paramInt2, Intent paramIntent)
  {
    super.onActivityResult(paramInt1, paramInt2, paramIntent);
    if (paramInt1 == 1000);
    try
    {
      getPackageManager().getApplicationInfo(this.l, 128);
      a(0, 0, 0, 0);
      Object[] arrayOfObject4 = new Object[1];
      arrayOfObject4[0] = this.m;
      Toast.makeText(this, getString(2131428548, arrayOfObject4), 0).show();
      finish();
      if (paramInt1 != 1001);
    }
    catch (Exception localException2)
    {
      try
      {
        getPackageManager().getApplicationInfo(this.l, 128);
        a(0, 1, 0, 0);
        Object[] arrayOfObject2 = new Object[1];
        arrayOfObject2[0] = this.m;
        Toast.makeText(this, getString(2131428548, arrayOfObject2), 0).show();
        finish();
        return;
        localException2 = localException2;
        this.g = true;
        a(1, 0, 0, 0);
        this.c.cancel(this.h);
        Object[] arrayOfObject3 = new Object[1];
        arrayOfObject3[0] = this.m;
        Toast.makeText(this, getString(2131428549, arrayOfObject3), 0).show();
      }
      catch (Exception localException1)
      {
        while (true)
        {
          this.g = true;
          a(1, 1, 0, 0);
          this.c.cancel(this.h);
          Object[] arrayOfObject1 = new Object[1];
          arrayOfObject1[0] = this.m;
          Toast.makeText(this, getString(2131428549, arrayOfObject1), 0).show();
        }
      }
    }
  }

  protected void onCreate(Bundle paramBundle)
  {
    super.onCreate(paramBundle);
    setContentView(2130903133);
    Bundle localBundle = getIntent().getExtras();
    this.h = localBundle.getInt("notificationID");
    this.i = localBundle.getInt("watcherModel");
    this.k = localBundle.getString("filePath");
    this.l = localBundle.getString("packName");
    this.m = localBundle.getString("softName");
    this.n = localBundle.getString("malName");
    File localFile = new File(this.k);
    boolean bool;
    if (localFile.getPath().startsWith("/system/app/"))
    {
      bool = true;
      this.p = bool;
      this.c = ((NotificationManager)getSystemService("notification"));
      this.d = com.keniu.security.monitor.a.a();
      switch (this.i)
      {
      default:
        this.j = "unKnownWatcher";
        label170: this.r = new File(this.k).exists();
        this.u = new q(this);
        if (this.r)
        {
          this.o = d.a(new File(this.k));
          String str = this.m;
          com.keniu.security.commui.b localb = new com.keniu.security.commui.b(this);
          localb.a(getString(2131427865), getString(2131429168, new Object[] { str }), getString(2131429166), getString(2131429167));
          localb.a(new cc(this, localb), new cd(this, localb));
          localb.d();
        }
        break;
      case 0:
      case 1:
      case 2:
      }
    }
    while (true)
    {
      return;
      if (localFile.lastModified() < 86400000L + new File("/system/app/").lastModified())
      {
        bool = true;
        break;
      }
      bool = false;
      break;
      this.j = "download";
      break label170;
      this.j = "install";
      break label170;
      this.j = "open";
      break label170;
      this.g = true;
      Toast.makeText(this, "此应用已被清除。", 0).show();
      this.c.cancel(this.h);
      finish();
    }
  }

  protected void onDestroy()
  {
    super.onDestroy();
    if (this.s)
      bz.a().g();
    if (this.t)
      this.d.a(com.keniu.security.monitor.a.x);
    this.v = this.u.a();
    bu.a(System.currentTimeMillis(), 1 + this.v, this.v, 0L, 0L);
    Intent localIntent1 = new Intent();
    localIntent1.setAction("android.intent.action.MY_RECEIVER");
    sendBroadcast(localIntent1);
    Intent localIntent2 = new Intent();
    localIntent2.setAction("android.intent.action.MY_WATCHERRECEIVER");
    Bundle localBundle = new Bundle();
    localBundle.putString("file_path", this.k);
    localBundle.putBoolean("bool_clean_res", this.g);
    localIntent2.putExtras(localBundle);
    sendBroadcast(localIntent2);
  }
}

/* Location:           C:\Users\sandrocheng.21KUNPENG\Desktop\classes_dex2jar\
 * Qualified Name:     com.keniu.security.malware.TransparentVircusAcitvity
 * JD-Core Version:    0.6.2
 */