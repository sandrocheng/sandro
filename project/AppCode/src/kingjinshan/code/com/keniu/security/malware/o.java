package com.keniu.security.malware;

import android.content.pm.ApplicationInfo;
import android.util.Log;
import com.keniu.security.d.d;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import kdebug.KJniAssemble;
import kdebug.b;
import kdebug.c;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public final class o
{
  public static File a(List paramList)
  {
    int i = 0;
    HashMap localHashMap = new HashMap();
    for (int j = 0; j < paramList.size(); j++)
    {
      AppMettle localAppMettle = (AppMettle)paramList.get(j);
      localHashMap.put(localAppMettle.a.publicSourceDir, localAppMettle.b.v);
    }
    if (localHashMap.size() != 0);
    while (true)
    {
      try
      {
        File localFile2 = new File("/sdcard/mosecurity/cloud/");
        File[] arrayOfFile = localFile2.listFiles();
        if (arrayOfFile != null)
        {
          int k = arrayOfFile.length;
          if (i < k)
          {
            arrayOfFile[i].delete();
            i++;
            continue;
          }
        }
        localFile2.mkdirs();
        File localFile3 = new File("/sdcard/mosecurity/cloud/sample.zip");
        localFile3.delete();
        b.a(localHashMap, localFile3);
        String str = a(localFile3);
        File localFile4 = new File("/sdcard/mosecurity/cloud/" + str);
        localFile3.renameTo(localFile4);
        localFile3.delete();
        localFile1 = localFile4;
        return localFile1;
      }
      catch (Exception localException)
      {
      }
      File localFile1 = null;
    }
  }

  // ERROR //
  private static String a(File paramFile)
  {
    // Byte code:
    //   0: new 99	java/io/FileInputStream
    //   3: dup
    //   4: aload_0
    //   5: invokespecial 102	java/io/FileInputStream:<init>	(Ljava/io/File;)V
    //   8: astore_1
    //   9: sipush 16384
    //   12: newarray byte
    //   14: astore 13
    //   16: ldc 104
    //   18: invokestatic 110	java/security/MessageDigest:getInstance	(Ljava/lang/String;)Ljava/security/MessageDigest;
    //   21: astore 14
    //   23: aload_1
    //   24: aload 13
    //   26: invokevirtual 114	java/io/FileInputStream:read	([B)I
    //   29: istore 15
    //   31: iload 15
    //   33: ifle +39 -> 72
    //   36: aload 14
    //   38: aload 13
    //   40: iconst_0
    //   41: iload 15
    //   43: invokevirtual 118	java/security/MessageDigest:update	([BII)V
    //   46: goto -23 -> 23
    //   49: astore 10
    //   51: aload_1
    //   52: astore_3
    //   53: aload 10
    //   55: astore 11
    //   57: aload 11
    //   59: invokevirtual 121	java/io/IOException:printStackTrace	()V
    //   62: aload_3
    //   63: invokevirtual 124	java/io/FileInputStream:close	()V
    //   66: aconst_null
    //   67: astore 8
    //   69: aload 8
    //   71: areturn
    //   72: new 126	java/math/BigInteger
    //   75: dup
    //   76: iconst_1
    //   77: aload 14
    //   79: invokevirtual 130	java/security/MessageDigest:digest	()[B
    //   82: invokespecial 133	java/math/BigInteger:<init>	(I[B)V
    //   85: bipush 16
    //   87: invokevirtual 136	java/math/BigInteger:toString	(I)Ljava/lang/String;
    //   90: astore 16
    //   92: aload_1
    //   93: invokevirtual 124	java/io/FileInputStream:close	()V
    //   96: aload 16
    //   98: astore 8
    //   100: goto -31 -> 69
    //   103: astore 17
    //   105: aload 16
    //   107: astore 8
    //   109: goto -40 -> 69
    //   112: astore 12
    //   114: aconst_null
    //   115: astore 8
    //   117: goto -48 -> 69
    //   120: astore 4
    //   122: aconst_null
    //   123: astore_3
    //   124: aload 4
    //   126: invokevirtual 137	java/security/NoSuchAlgorithmException:printStackTrace	()V
    //   129: aload_3
    //   130: invokevirtual 124	java/io/FileInputStream:close	()V
    //   133: aconst_null
    //   134: astore 8
    //   136: goto -67 -> 69
    //   139: astore 7
    //   141: aconst_null
    //   142: astore 8
    //   144: goto -75 -> 69
    //   147: astore 5
    //   149: aconst_null
    //   150: astore_3
    //   151: aload_3
    //   152: invokevirtual 124	java/io/FileInputStream:close	()V
    //   155: aload 5
    //   157: athrow
    //   158: astore 6
    //   160: goto -5 -> 155
    //   163: astore 9
    //   165: aload_1
    //   166: astore_3
    //   167: aload 9
    //   169: astore 5
    //   171: goto -20 -> 151
    //   174: astore 5
    //   176: goto -25 -> 151
    //   179: astore_2
    //   180: aload_1
    //   181: astore_3
    //   182: aload_2
    //   183: astore 4
    //   185: goto -61 -> 124
    //   188: astore 11
    //   190: aconst_null
    //   191: astore_3
    //   192: goto -135 -> 57
    //
    // Exception table:
    //   from	to	target	type
    //   9	46	49	java/io/IOException
    //   72	92	49	java/io/IOException
    //   92	96	103	java/io/IOException
    //   62	66	112	java/io/IOException
    //   0	9	120	java/security/NoSuchAlgorithmException
    //   129	133	139	java/io/IOException
    //   0	9	147	finally
    //   151	155	158	java/io/IOException
    //   9	46	163	finally
    //   72	92	163	finally
    //   57	62	174	finally
    //   124	129	174	finally
    //   9	46	179	java/security/NoSuchAlgorithmException
    //   72	92	179	java/security/NoSuchAlgorithmException
    //   0	9	188	java/io/IOException
  }

  public static ArrayList a(String[] paramArrayOfString, boolean[] paramArrayOfBoolean)
  {
    int i = 0;
    ArrayList localArrayList1 = new ArrayList();
    Object[] arrayOfObject = b(paramArrayOfString, paramArrayOfBoolean);
    ArrayList localArrayList2;
    if ((arrayOfObject == null) || (arrayOfObject.length < 3))
      localArrayList2 = null;
    while (true)
    {
      return localArrayList2;
      String str1 = (String)arrayOfObject[0];
      ArrayList localArrayList3 = (ArrayList)arrayOfObject[1];
      JSONArray localJSONArray2;
      int k;
      d locald;
      try
      {
        JSONArray localJSONArray1 = new JSONArray(str1);
        localJSONArray2 = localJSONArray1;
        int j = paramArrayOfString.length;
        k = 0;
        while (true)
        {
          if (i >= j)
            break label289;
          String str2 = paramArrayOfString[i];
          locald = new d();
          if (!localArrayList3.contains(str2))
            break;
          locald.s = 5;
          Log.e("MalwareModel", " get sign" + str2);
          localArrayList1.add(locald);
          i++;
        }
      }
      catch (JSONException localJSONException2)
      {
        while (true)
          localJSONArray2 = null;
      }
      try
      {
        JSONObject localJSONObject = localJSONArray2.getJSONObject(k);
        switch (localJSONObject.getInt("status"))
        {
        default:
          locald.s = 1;
        case 1:
        case 2:
        case 3:
        }
        while (true)
        {
          locald.r = localJSONObject.getString("md5");
          break;
          locald.s = 2;
          if (localJSONObject.getBoolean("upload"))
          {
            locald.s = 3;
            locald.v = localJSONObject.getString("ticket");
            continue;
            locald.s = 0;
            continue;
            locald.s = 6;
            locald.t = localJSONObject.getString("virus_name");
          }
        }
        label289: localArrayList2 = localArrayList1;
        continue;
        label295: k++;
      }
      catch (JSONException localJSONException1)
      {
        break label295;
      }
      catch (Exception localException)
      {
        break label295;
      }
    }
  }

  public static boolean a(String paramString)
  {
    try
    {
      String str1 = new String(com.hoi.a.a.c(new KJniAssemble().GetFirstMultipart(UUID.randomUUID().toString().replaceAll("-", "")), 2));
      HashMap localHashMap = new HashMap();
      localHashMap.put("c", str1);
      localObject = kdebug.a.a("http://cloud-u.duba.net:8080/uploadsample", localHashMap, new c[] { new c(new File(paramString).getName(), paramString, "file") });
      if ((localObject != null) && (((String)localObject).length() != 0))
      {
        String str2 = new String(com.hoi.a.a.a((String)localObject, 0));
        localObject = str2;
      }
      if ((localObject != null) && (((String)localObject).equals("0#")))
      {
        bool = true;
        return bool;
      }
    }
    catch (Exception localException)
    {
      while (true)
      {
        Object localObject = null;
        continue;
        boolean bool = false;
      }
    }
  }

  private static Object[] b(String[] paramArrayOfString, boolean[] paramArrayOfBoolean)
  {
    try
    {
      KJniAssemble localKJniAssemble = new KJniAssemble();
      ArrayList localArrayList = new ArrayList();
      HashMap localHashMap1 = new HashMap();
      byte[] arrayOfByte = localKJniAssemble.GetSign4(paramArrayOfString, localArrayList, localHashMap1, paramArrayOfBoolean);
      if ((arrayOfByte != null) && (arrayOfByte.length > 1))
      {
        String str1 = new String(com.hoi.a.a.c(localKJniAssemble.GetFirstMultipart(UUID.randomUUID().toString().replaceAll("-", "")), 2));
        HashMap localHashMap2 = new HashMap();
        localHashMap2.put("c", str1);
        String str2 = kdebug.a.a("http://cloud-q.duba.net/query2", localHashMap2, new c[] { new c("a.v", arrayOfByte, "file") });
        if ((str2 != null) && (str2.length() != 0))
        {
          String str3 = new String(com.hoi.a.a.a(str2, 0));
          arrayOfObject = new Object[3];
          arrayOfObject[0] = str3;
          arrayOfObject[1] = localArrayList;
          arrayOfObject[2] = localHashMap1;
          return arrayOfObject;
        }
      }
    }
    catch (Exception localException)
    {
      while (true)
      {
        localException.printStackTrace();
        Object[] arrayOfObject = null;
      }
    }
  }
}

/* Location:           C:\Users\sandrocheng.21KUNPENG\Desktop\classes_dex2jar\
 * Qualified Name:     com.keniu.security.malware.o
 * JD-Core Version:    0.6.2
 */