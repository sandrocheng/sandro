// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.3 by WSRD Tencent.
// Generated from `Pay.jce'
// **********************************************************************

package com.tencent.onesecurity.service.QQPIM;

public final class FeedbackRequest extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{

    private static final long serialVersionUID = -6929384070429200221L;

    public String className()
    {
        return "QQPIM.FeedbackRequest";
    }

    public String fullClassName()
    {
        return "com.tencent.onesecurity.service.QQPIM.FeedbackRequest";
    }

    public User user = null;

    public int fid = 0;

    public String feedback = "";

    public int languageFlag = 0;

    public User getUser()
    {
        return user;
    }

    public void  setUser(User user)
    {
        this.user = user;
    }

    public int getFid()
    {
        return fid;
    }

    public void  setFid(int fid)
    {
        this.fid = fid;
    }

    public String getFeedback()
    {
        return feedback;
    }

    public void  setFeedback(String feedback)
    {
        this.feedback = feedback;
    }

    public int getLanguageFlag()
    {
        return languageFlag;
    }

    public void  setLanguageFlag(int languageFlag)
    {
        this.languageFlag = languageFlag;
    }

    public FeedbackRequest()
    {
        setUser(user);
        setFid(fid);
        setFeedback(feedback);
        setLanguageFlag(languageFlag);
    }

    public FeedbackRequest(User user, int fid, String feedback, int languageFlag)
    {
        setUser(user);
        setFid(fid);
        setFeedback(feedback);
        setLanguageFlag(languageFlag);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        FeedbackRequest t = (FeedbackRequest) o;
        return (
            com.qq.taf.jce.JceUtil.equals(user, t.user) && 
            com.qq.taf.jce.JceUtil.equals(fid, t.fid) && 
            com.qq.taf.jce.JceUtil.equals(feedback, t.feedback) && 
            com.qq.taf.jce.JceUtil.equals(languageFlag, t.languageFlag) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(user, 0);
        _os.write(fid, 1);
        _os.write(feedback, 2);
        _os.write(languageFlag, 3);
    }

    static User cache_user;

    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        if(null == cache_user)
        {
            cache_user = new User();
        }
        setUser((User) _is.read(cache_user, 0, true));

        setFid((int) _is.read(fid, 1, true));

        setFeedback( _is.readString(2, true));

        setLanguageFlag((int) _is.read(languageFlag, 3, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(user, "user");
        _ds.display(fid, "fid");
        _ds.display(feedback, "feedback");
        _ds.display(languageFlag, "languageFlag");
    }

}

