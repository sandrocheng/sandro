// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.3 by WSRD Tencent.
// Generated from `Pay.jce'
// **********************************************************************

package com.tencent.onesecurity.service.QQPIM;

public final class User extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{
	private static final long serialVersionUID = 1953132184164529556L;

	public String className()
    {
        return "QQPIM.User";
    }

    public String fullClassName()
    {
        return "com.tencent.onesecurity.service.QQPIM.User";
    }

    public String lc = "";

    public String version = "";

    public String imei = "";

    public String email = "";

    public String machine = "";

    public long qq = 0;

    public String getLc()
    {
        return lc;
    }

    public void  setLc(String lc)
    {
        this.lc = lc;
    }

    public String getVersion()
    {
        return version;
    }

    public void  setVersion(String version)
    {
        this.version = version;
    }

    public String getImei()
    {
        return imei;
    }

    public void  setImei(String imei)
    {
        this.imei = imei;
    }

    public String getEmail()
    {
        return email;
    }

    public void  setEmail(String email)
    {
        this.email = email;
    }

    public String getMachine()
    {
        return machine;
    }

    public void  setMachine(String machine)
    {
        this.machine = machine;
    }

    public long getQq()
    {
        return qq;
    }

    public void  setQq(long qq)
    {
        this.qq = qq;
    }

    public User()
    {
        setLc(lc);
        setVersion(version);
        setImei(imei);
        setEmail(email);
        setMachine(machine);
        setQq(qq);
    }

    public User(String lc, String version, String imei, String email, String machine, long qq)
    {
        setLc(lc);
        setVersion(version);
        setImei(imei);
        setEmail(email);
        setMachine(machine);
        setQq(qq);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        User t = (User) o;
        return (
            com.qq.taf.jce.JceUtil.equals(lc, t.lc) && 
            com.qq.taf.jce.JceUtil.equals(version, t.version) && 
            com.qq.taf.jce.JceUtil.equals(imei, t.imei) && 
            com.qq.taf.jce.JceUtil.equals(email, t.email) && 
            com.qq.taf.jce.JceUtil.equals(machine, t.machine) && 
            com.qq.taf.jce.JceUtil.equals(qq, t.qq) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(lc, 0);
        _os.write(version, 1);
        _os.write(imei, 2);
        _os.write(email, 3);
        _os.write(machine, 4);
        _os.write(qq, 5);
    }


    public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        setLc( _is.readString(0, true));

        setVersion( _is.readString(1, true));

        setImei( _is.readString(2, true));

        setEmail( _is.readString(3, true));

        setMachine( _is.readString(4, true));

        setQq((long) _is.read(qq, 5, false));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(lc, "lc");
        _ds.display(version, "version");
        _ds.display(imei, "imei");
        _ds.display(email, "email");
        _ds.display(machine, "machine");
        _ds.display(qq, "qq");
    }

}

