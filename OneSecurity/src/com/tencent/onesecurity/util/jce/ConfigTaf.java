package com.tencent.onesecurity.util.jce;

// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.4.2 by WSRD Tencent.
// Generated from `/usr/local/resin_system.mqq.com/webapps/communication/taf/upload/p_tonyli/QQDProtocol.jce'
// **********************************************************************


public final class ConfigTaf extends com.qq.taf.jce.JceStruct implements java.lang.Cloneable
{

	private static final long serialVersionUID = 15536055503013434L;

	public String className()
    {
        return "QQD.ConfigTaf";
    }

    public String fullClassName()
    {
        return "QQD.ConfigTaf";
    }

    public String Id = "";

    public java.util.Map<String, String> ConfigInfo = null;

    public String getId()
    {
        return Id;
    }

    public void  setId(String Id)
    {
        this.Id = Id;
    }

    public java.util.Map<String, String> getConfigInfo()
    {
        return ConfigInfo;
    }

    public void  setConfigInfo(java.util.Map<String, String> ConfigInfo)
    {
        this.ConfigInfo = ConfigInfo;
    }

    public ConfigTaf()
    {
        setId(Id);
        setConfigInfo(ConfigInfo);
    }

    public ConfigTaf(String Id, java.util.Map<String, String> ConfigInfo)
    {
        setId(Id);
        setConfigInfo(ConfigInfo);
    }

    public boolean equals(Object o)
    {
        if(o == null)
        {
            return false;
        }

        ConfigTaf t = (ConfigTaf) o;
        return (
            com.qq.taf.jce.JceUtil.equals(Id, t.Id) && 
            com.qq.taf.jce.JceUtil.equals(ConfigInfo, t.ConfigInfo) );
    }

    public int hashCode()
    {
        try
        {
            throw new Exception("Need define key first!");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return 0;
    }
    public java.lang.Object clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void writeTo(com.qq.taf.jce.JceOutputStream _os)
    {
        _os.write(Id, 0);
        _os.write(ConfigInfo, 1);
    }

    static java.util.Map<String, String> cache_ConfigInfo;

    @SuppressWarnings("unchecked")
	public void readFrom(com.qq.taf.jce.JceInputStream _is)
    {
        setId( _is.readString(0, true));

        if(null == cache_ConfigInfo)
        {
            cache_ConfigInfo = new java.util.HashMap<String, String>();
            String __var_1 = "";
            String __var_2 = "";
            cache_ConfigInfo.put(__var_1, __var_2);
        }
        setConfigInfo((java.util.Map<String, String>) _is.read(cache_ConfigInfo, 1, true));

    }

    public void display(java.lang.StringBuilder _os, int _level)
    {
        com.qq.taf.jce.JceDisplayer _ds = new com.qq.taf.jce.JceDisplayer(_os, _level);
        _ds.display(Id, "Id");
        _ds.display(ConfigInfo, "ConfigInfo");
    }

}

